<?xml version="1.0" encoding="UTF-8"?>
<root type="think4j-context">
    <params>
        <!-- value ${}可以设置参数，例如设置${key}会取System.getProperty(key)值替换原${key} -->
        <param key="参数名称，用于获取参数值，全局唯一" value="参数值" describe="参数描述，用于说明参数作用，程序不使用这个属性"></param>
    </params>
    <tables>
        <table type="数据库类型，mysql,sqlite,sqlserver,oracle" name="表名，用于获取表，全局唯一" comment="表的描述" ds="数据源名称"
               pk="主键名，定义成主键的字段，固定类型int长度11自增长" describe="表描述，用于说明表作用，程序不使用这个属性">
            <fields>
                <field name="字段名，本表唯一" comment="字段描述" type="字段类型，对应数据库类型"
                       size="字段长度" isnull="是否可空 true可空 false不可空" default="默认值"></field>
            </fields>
            <indexes>
                <index name="索引名称" type="INDEX,UNIQUE索引或者唯一，默认为唯一" comment="索引描述"
                       fields="索引字段，多个“,”号隔开，关键字加上``，如`code`,`name`"></index>
            </indexes>
            <datas>
                <!-- 根据表的字段定义生成数据，格式 字段名=字段值，例如表有字段id，code则数据如下 -->
                <data id="1" code="wisek"></data>
            </datas>
        </table>
    </tables>
    <models>
        <model type="数据库类型，mysql,sqlite,sqlserver,oracle" name="model名称，用于获取model，全局唯一" ds="数据源名称"
               table="model对应的上面table表的名称"
               pk="表的主键名称" describe="model描述，用于说明model作用，程序不使用这个属性">
            <joins>
                <join name="join的name，用于获取此join属性，本model唯一" table="关联表名称"
                      type="关联类型(left join、right join、inner join)" key="关联表的字段名"
                      joinName="join的name，用于获取过滤的字段的表，如果为空或者不设置表示model的主表，如果设置必须设置上面join的name，表示获取join对应的关联表"
                      joinkey="主表字段名"></join>
            </joins>
            <filters>
                <!-- 过滤类型 =,!=,>,<,>=,<=,between,like,in,not in -->
                <!-- 过滤值 如果是between则需要设置2个值","分开，如 1,10；如果是in或者not in则多个值用","分开 -->
                <filter
                        joinName="join的name，用于获取过滤的字段的表，如果为空或者不设置表示model的主表，如果设置必须设置上面join的name，表示获取join对应的关联表"
                        key="过滤字段名" type="过滤类型" value="过滤值"></filter>
            </filters>
            <orders>
                <order
                        joinName="join的name，用于获取过滤的字段的表，如果为空或者不设置表示model的主表，如果设置必须设置上面join的name，表示获取join对应的关联表"
                        key="排序字段名" type="排序类型desc或者asc"></order>
            </orders>
            <!-- columns表示model的列，如果不设置，会根据model对应的table，把table所有的字段设置成列 -->
            <columns>
                <column name="对应表的字段名"
                        joinName="join的name，用于获取过滤的字段的表，如果为空或者不设置表示model的主表，如果设置必须设置上面join的name，表示获取join对应的关联表"
                        alias="列的别名，注意是关联字段后重名设置"></column>
            </columns>
        </model>
    </models>
</root>